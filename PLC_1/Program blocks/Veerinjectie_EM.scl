FUNCTION_BLOCK "Veerplaatsing_EM"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      Start : Bool;
      Stop : Bool;
      Estop_1 : Bool;
   END_VAR

   VAR_OUTPUT 
      Voltooid : Bool;
   END_VAR

   VAR 
      Geleider { S7_SetPoint := 'False'} : "CilinderM52_CM";
      Sluis : "CilinderB52_CM";
      Plunjer_Pusher : "CilinderB52_CM";
      EStop : "E-Stop_CM";
      Stap { S7_SetPoint := 'True'} : Int;
      Prev_Stap : Int;
   END_VAR


BEGIN
	CASE #Stap OF
	    0: //begin state, alle cilinders in en wacht op input vanuit U
	        #Geleider.CMD_In := TRUE;
	        #Geleider.CMD_Uit := FALSE;
	        #Sluis.CMD_In := TRUE;
	        #Sluis.CMD_Uit := FALSE;
	        #Plunjer_Pusher.CMD_In := TRUE;
	        #Plunjer_Pusher.CMD_Uit := FALSE;
	        #Voltooid := TRUE;
	        
	        IF #Start THEN
	            #Stap := #Stap + 1;
	        END_IF;
	    1://geleider naar beneden
	        #Voltooid := FALSE;
	        #Geleider.CMD_Uit := TRUE;
	        #Geleider.CMD_In := FALSE;
	        IF #Geleider.Cil_Uit THEN
	            #Stap := #Stap + 1;
	        END_IF;
	    2: //product invoeren
	        #Sluis.CMD_In := FALSE;
	        #Sluis.CMD_Uit := TRUE;
	        IF #Sluis.Cil_Uit THEN
	            #Stap := #Stap + 1;
	        END_IF;
	    3: //reset invoer
	        #Sluis.CMD_In := FALSE;
	        #Sluis.CMD_Uit := TRUE;
	        IF #Sluis.Cil_Uit THEN
	            #Stap := #Stap + 1;
	        END_IF;
	    4: //geleider omhoog
	        #Geleider.CMD_Uit := FALSE;
	        #Geleider.CMD_In := TRUE;
	        IF #Geleider.Cil_In THEN
	            #Stap := #Stap + 1;
	        END_IF;
	    5://plunjer nadrukken
	        #Plunjer_Pusher.CMD_Uit := TRUE;
	        #Plunjer_Pusher.CMD_In := FALSE;
	        IF #Plunjer_Pusher.Cil_Uit THEN
	            #Stap := #Stap + 1;
	        END_IF;
	    6:
	        #Plunjer_Pusher.CMD_Uit := FALSE;
	        #Plunjer_Pusher.CMD_In := TRUE;
	        IF #Plunjer_Pusher.Cil_In THEN
	            #Stap := 0;
	        END_IF;
	    20: //stopstate
	        IF #Start THEN
	            #Stap := #Prev_Stap;
	        END_IF;
	END_CASE;
	
	IF #Stop OR #EStop.EStop_Active THEN
	    IF #Stap <> 20 THEN
	        #Prev_Stap := #Stap;
	    END_IF;
	    #Stap := 20;
	END_IF;
	
	#Plunjer_Pusher();
	#Geleider();
	#Sluis();
	#EStop();
	
	
END_FUNCTION_BLOCK

