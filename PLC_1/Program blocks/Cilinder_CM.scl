FUNCTION_BLOCK "CilinderM52_CM"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      CMD_In : Bool;
      CMD_Uit : Bool;
   END_VAR

   VAR_OUTPUT 
      Q_Uit : Bool;
      Q_In : Bool;
      Cil_In : Bool;
      Cil_Uit : Bool;
      Q_Error : Bool;
   END_VAR

   VAR 
      Stap : Int;
      "Timer" {InstructionName := 'IEC_TIMER'; LibVersion := '1.0'; S7_SetPoint := 'False'} : IEC_TIMER;
      Cil_Time { S7_SetPoint := 'True'} : Bool;
      reset { S7_SetPoint := 'True'} : Bool;
      CilinderTime : Time;
   END_VAR


BEGIN
	CASE #Stap OF
	    0: //cilinder is In wordt Out gemaakt
	        #reset := TRUE;
	        #Q_In := TRUE;
	        #Q_Uit := FALSE;
	        IF #CMD_Uit OR #Cil_Uit//AND NOT #I_CMD_In
	            THEN
	            #Stap := #Stap + 1;
	        END_IF;
	        
	    1: //maak cilinder Out
	        #Q_Uit := TRUE;
	        #Q_In := FALSE;
	        IF #Cil_Time THEN
	            #Stap := #Stap + 1;
	        END_IF;
	        
	    2: //cilinder is Out wordt In gemaakt
	        #reset := TRUE;
	        #Q_Uit := TRUE;
	        #Q_In := FALSE;
	        IF #CMD_In OR #Cil_In//AND NOT #I_CMD_Uit
	            THEN
	            #Stap := #Stap + 1;
	        END_IF;
	        
	    3: //maak cilinder In
	        #Q_In := TRUE;
	        #Q_Uit := FALSE;
	        IF #Cil_Time THEN
	            #Stap := 0;
	        END_IF;
	    ELSE
	        #reset := FALSE;
	END_CASE;
	
	#Timer.TON(IN := #Stap = 1 OR #Stap = 3,
	           PT := #CilinderTime);
	
	#Cil_Time := #Timer.Q;
	
	IF #reset THEN
	    #Cil_Time := FALSE;
	END_IF;
	
	
	
	
	
	
END_FUNCTION_BLOCK

