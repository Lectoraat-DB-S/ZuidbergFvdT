FUNCTION_BLOCK "Cilinder_CM"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      I_Cil_In : Bool;
      I_Cil_Uit : Bool;
      I_CMD_In : Bool;
      I_CMD_Uit : Bool;
   END_VAR

   VAR_OUTPUT 
      Q_Cil_Uit : Bool;
      Q_Cil_In : Bool;
      Q_CMD_In : Bool;
      Q_CMD_Uit : Bool;
      Q_Error : Bool;
   END_VAR

   VAR 
      Stap : Int;
      "Timer" {InstructionName := 'IEC_TIMER'; LibVersion := '1.0'; S7_SetPoint := 'False'} : IEC_TIMER;
   END_VAR


BEGIN
	CASE #Stap OF
	    0: //cilinder is In wordt Out gemaakt
	        #Q_Cil_In := TRUE;
	        #Q_Cil_Uit := FALSE;
	        IF #I_CMD_Uit AND NOT #I_CMD_In THEN
	            #Stap := #Stap + 1;
	        END_IF;
	        
	    1: //maak cilinder Out
	        #Q_Cil_Uit := TRUE;
	        #Q_Cil_In := FALSE;
	        IF #I_CMD_Uit THEN
	            #Stap := #Stap + 1;
	        END_IF;
	        
	    2: //cilinder is Out wordt In gemaakt
	        #Q_Cil_Uit := TRUE;
	        #Q_Cil_In := FALSE;
	        IF #I_CMD_In AND NOT #I_CMD_Uit THEN
	            #Stap := #Stap + 1;
	        END_IF;
	        
	    3: //maak cilinder In
	        #Q_Cil_In := TRUE;
	        #Q_Cil_Uit := FALSE;
	        IF #I_CMD_In THEN
	            #Stap := 0;
	        END_IF;
	END_CASE;
	
	#Q_CMD_Uit := #I_CMD_Uit;
	#Q_CMD_In := #I_CMD_In;
	
	
	#Timer.TON(
	IN := #Stap = 1 OR #Stap = 3,
	PT := T#5S
	);
	
	#Q_Error := #Timer.Q;
	IF #Timer.Q THEN
	    #Q_Error := TRUE;
	END_IF;
	
	
	
	
	
	
END_FUNCTION_BLOCK

